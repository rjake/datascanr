% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/refactor-columns.R
\name{refactor_columns}
\alias{refactor_columns}
\title{Convert all fields to factors (same method as under plots)}
\usage{
refactor_columns(
  df,
  dv,
  split_on = NA_character_,
  id = NULL,
  n_cat = 10,
  collapse_by = c("dv", "n"),
  n_quantile = 10,
  n_digits = 2,
  avg_type = c("mean", "median"),
  ignore_cols = NA_character_
)
}
\arguments{
\item{df}{dataframe to evaluate}

\item{dv}{dependent variable to use (column name)}

\item{split_on}{variable to split data / group by}

\item{id}{field to use as ID}

\item{n_cat}{for categorical variables, the max number of unique values
to keep. This field feeds the \code{forcats::fct_lump(n = )} argument.}

\item{collapse_by}{should \code{n_cat} collapse by the distance to the grand
mean \code{"dv"} leaving the extremes as is and grouping factors closer to the
grand mean as "other" or should it use size \code{"n"}}

\item{n_quantile}{for numeric/date fields, the number of quantiles used
to split the data into a factor. Fields that have less than this amount
will not be changed.}

\item{n_digits}{for numeric fields, the number of digits to keep in the breaks
ex: [1.2345 to 2.3456] will be [1.23 to 2.34] if \code{n_digits = 2}}

\item{avg_type}{mean or median}

\item{ignore_cols}{columns to ignore from analysis. Good candidates are
fields that have have no duplicate values (primary keys) or fields with
a large proportion of null values}
}
\description{
Convert all fields to factors (same method as under plots)
}
\examples{
refactor_columns(df = iris, dv = "Sepal.Length")
}
